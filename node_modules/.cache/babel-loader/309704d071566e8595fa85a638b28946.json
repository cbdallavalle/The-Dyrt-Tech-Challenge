{"ast":null,"code":"var _jsxFileName = \"/Users/casey/Projects/dyrt-tech-challenge/src/components/Sidebar/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport searchResults from '../../data/searchResults';\nimport { log } from '../../utils/logToAnalytics';\nimport styles from './Sidebar.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Sidebar = _ref => {\n  _s();\n\n  let {\n    setSelectedCampgroundId,\n    results,\n    setResults,\n    query,\n    setQuery\n  } = _ref;\n  const [showMenu, setShowMenu] = useState(false);\n  const [loading, setLoading] = useState();\n  const [result, setResult] = useState();\n  useEffect(() => {\n    if (result) {\n      setSelectedCampgroundId(result.id);\n    }\n  }, [result]);\n  useEffect(() => {\n    if (query) {\n      /*\n        TODO load results from https://staging.thedyrt.com/api/v5/autocomplete/campgrounds with\n        the query parameter `q`\n      */\n      setLoading(true);\n      setTimeout(() => {\n        setResults(searchResults.filter(result => result.name.includes(query)));\n        setLoading(false);\n      }, 500);\n    }\n  }, [query]);\n  const logToAnalytics = useCallback(() => {\n    log('search-dropdown-enter', results);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles['sidebar'],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['sidebar__content'],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles['search'],\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles['search__input-container'],\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles['search__input'],\n            placeholder: \"Where would you like to camp?\",\n            onChange: e => {\n              setQuery(e.target.value);\n            },\n            onClick: () => {\n              setShowMenu(!showMenu);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles['search__dropdown']} ${showMenu ? styles['search__dropdown--active'] : undefined}`,\n          onMouseEnter: logToAnalytics,\n          children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading ...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this) : results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles['search__dropdown__item'],\n            onClick: () => {\n              setResult(result);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: result.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sidebar, \"3WsfcqAVHqfgpJ5GMSSw0kTcsyA=\");\n\n_c = Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/Users/casey/Projects/dyrt-tech-challenge/src/components/Sidebar/index.tsx"],"names":["React","useCallback","useEffect","useState","searchResults","log","styles","Sidebar","setSelectedCampgroundId","results","setResults","query","setQuery","showMenu","setShowMenu","loading","setLoading","result","setResult","id","setTimeout","filter","name","includes","logToAnalytics","e","target","value","undefined","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,OAAOC,aAAP,MAAoC,0BAApC;AACA,SAASC,GAAT,QAAoB,4BAApB;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;;AAUA,OAAO,MAAMC,OAAO,GAAG,QAMH;AAAA;;AAAA,MANI;AACtBC,IAAAA,uBADsB;AAEtBC,IAAAA,OAFsB;AAGtBC,IAAAA,UAHsB;AAItBC,IAAAA,KAJsB;AAKtBC,IAAAA;AALsB,GAMJ;AAClB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,EAAtC;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,EAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,MAAJ,EAAY;AACVT,MAAAA,uBAAuB,CAACS,MAAM,CAACE,EAAR,CAAvB;AACD;AACF,GAJQ,EAIN,CAACF,MAAD,CAJM,CAAT;AAMAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,KAAJ,EAAW;AACT;AACN;AACA;AACA;AACMK,MAAAA,UAAU,CAAC,IAAD,CAAV;AAEAI,MAAAA,UAAU,CAAC,MAAM;AACfV,QAAAA,UAAU,CACRN,aAAa,CAACiB,MAAd,CAAsBJ,MAAD,IAAYA,MAAM,CAACK,IAAP,CAAYC,QAAZ,CAAqBZ,KAArB,CAAjC,CADQ,CAAV;AAGAK,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OALS,EAKP,GALO,CAAV;AAMD;AACF,GAfQ,EAeN,CAACL,KAAD,CAfM,CAAT;AAiBA,QAAMa,cAAc,GAAGvB,WAAW,CAAC,MAAM;AACvCI,IAAAA,GAAG,CAAC,uBAAD,EAA0BI,OAA1B,CAAH;AACD,GAFiC,EAE/B,EAF+B,CAAlC;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEH,MAAM,CAAC,SAAD,CAAtB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEA,MAAM,CAAC,kBAAD,CAAtB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAEA,MAAM,CAAC,QAAD,CAAtB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAEA,MAAM,CAAC,yBAAD,CAAtB;AAAA,iCACE;AACE,YAAA,SAAS,EAAEA,MAAM,CAAC,eAAD,CADnB;AAEE,YAAA,WAAW,EAAC,+BAFd;AAGE,YAAA,QAAQ,EAAGmB,CAAD,IAAO;AACfb,cAAAA,QAAQ,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,aALH;AAME,YAAA,OAAO,EAAE,MAAM;AACbb,cAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD;AARH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE;AACE,UAAA,SAAS,EAAG,GAAEP,MAAM,CAAC,kBAAD,CAAqB,IACvCO,QAAQ,GAAGP,MAAM,CAAC,0BAAD,CAAT,GAAwCsB,SACjD,EAHH;AAIE,UAAA,YAAY,EAAEJ,cAJhB;AAAA,oBAMGT,OAAO,gBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADM,GAGNN,OAAO,CAACoB,GAAR,CAAY,CAACZ,MAAD,EAASa,KAAT,kBACV;AAEE,YAAA,SAAS,EAAExB,MAAM,CAAC,wBAAD,CAFnB;AAGE,YAAA,OAAO,EAAE,MAAM;AACbY,cAAAA,SAAS,CAACD,MAAD,CAAT;AACD,aALH;AAAA,mCAOE;AAAA,wBAAIA,MAAM,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA;AAPF,aACOQ,KADP;AAAA;AAAA;AAAA;AAAA,kBADF;AATJ;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD,CAjFM;;GAAMvB,O;;KAAAA,O","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport searchResults, {Result} from '../../data/searchResults';\nimport { log } from '../../utils/logToAnalytics';\n\nimport styles from './Sidebar.module.scss';\n\ntype SidebarProps = {\n  setSelectedCampgroundId: Function\n  results: Result[]\n  setResults: Function\n  query: string\n  setQuery: Function\n}\n\nexport const Sidebar = ({\n  setSelectedCampgroundId,\n  results,\n  setResults,\n  query,\n  setQuery,\n}: SidebarProps) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const [loading, setLoading] = useState();\n  const [result, setResult] = useState<Result | null>();\n\n  useEffect(() => {\n    if (result) {\n      setSelectedCampgroundId(result.id);\n    }\n  }, [result]);\n\n  useEffect(() => {\n    if (query) {\n      /*\n        TODO load results from https://staging.thedyrt.com/api/v5/autocomplete/campgrounds with\n        the query parameter `q`\n      */\n      setLoading(true);\n\n      setTimeout(() => {\n        setResults(\n          searchResults.filter((result) => result.name.includes(query))\n        );\n        setLoading(false);\n      }, 500);\n    }\n  }, [query]);\n\n  const logToAnalytics = useCallback(() => {\n    log('search-dropdown-enter', results);\n  }, []);\n\n  return (\n    <div className={styles['sidebar']}>\n      <div className={styles['sidebar__content']}>\n        <div className={styles['search']}>\n          <div className={styles['search__input-container']}>\n            <input\n              className={styles['search__input']}\n              placeholder=\"Where would you like to camp?\"\n              onChange={(e) => {\n                setQuery(e.target.value);\n              }}\n              onClick={() => {\n                setShowMenu(!showMenu);\n              }}\n            />\n          </div>\n\n          <div\n            className={`${styles['search__dropdown']} ${\n              showMenu ? styles['search__dropdown--active'] : undefined\n            }`}\n            onMouseEnter={logToAnalytics}\n          >\n            {loading ? (\n              <p>Loading ...</p>\n            ) : (\n              results.map((result, index) => (\n                <div\n                  key={index}\n                  className={styles['search__dropdown__item']}\n                  onClick={() => {\n                    setResult(result);\n                  }}\n                >\n                  <p>{result.name}</p>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}